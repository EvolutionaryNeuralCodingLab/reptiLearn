[{"/home/tal/dev/reptilearn/ui/src/index.js":"1","/home/tal/dev/reptilearn/ui/src/App.js":"2","/home/tal/dev/reptilearn/ui/src/reportWebVitals.js":"3","/home/tal/dev/reptilearn/ui/src/components.js":"4","/home/tal/dev/reptilearn/ui/src/experiment_view.js":"5","/home/tal/dev/reptilearn/ui/src/state_view.js":"6","/home/tal/dev/reptilearn/ui/src/socket.js":"7","/home/tal/dev/reptilearn/ui/src/config.js":"8","/home/tal/dev/reptilearn/ui/src/stream_view.js":"9","/home/tal/dev/reptilearn/ui/src/video_record_view.js":"10","/home/tal/dev/reptilearn/ui/src/log_view.js":"11"},{"size":635,"mtime":1615277448780,"results":"12","hashOfConfig":"13"},{"size":3646,"mtime":1616072079885,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611845073939,"results":"15","hashOfConfig":"16"},{"size":661,"mtime":1615551571990,"results":"17","hashOfConfig":"13"},{"size":5667,"mtime":1616087009371,"results":"18","hashOfConfig":"13"},{"size":282,"mtime":1615746951616,"results":"19","hashOfConfig":"13"},{"size":296,"mtime":1615550870330,"results":"20","hashOfConfig":"13"},{"size":92,"mtime":1615550971815,"results":"21","hashOfConfig":"13"},{"size":6798,"mtime":1616073296868,"results":"22","hashOfConfig":"13"},{"size":2378,"mtime":1615971296263,"results":"23","hashOfConfig":"13"},{"size":911,"mtime":1615979106947,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"mgtd88",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15r9jqw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},"/home/tal/dev/reptilearn/ui/src/index.js",[],["50","51"],"/home/tal/dev/reptilearn/ui/src/App.js",[],"/home/tal/dev/reptilearn/ui/src/reportWebVitals.js",[],["52","53"],"/home/tal/dev/reptilearn/ui/src/components.js",[],"/home/tal/dev/reptilearn/ui/src/experiment_view.js",["54","55"],"/home/tal/dev/reptilearn/ui/src/state_view.js",[],"/home/tal/dev/reptilearn/ui/src/socket.js",[],"/home/tal/dev/reptilearn/ui/src/config.js",[],"/home/tal/dev/reptilearn/ui/src/stream_view.js",[],"/home/tal/dev/reptilearn/ui/src/video_record_view.js",[],"/home/tal/dev/reptilearn/ui/src/log_view.js",["56"],"import React from 'react';\nimport {SocketContext} from './socket.js';\n\nexport const LogView = () => {\n    const logContainer = React.useRef(\"System log\\n==========\\n\");\n    const textarea_ref = React.useRef();\n    const [logMsg, setLogMsg] = React.useState(null);\n    \n    const socket = React.useContext(SocketContext);\n\n    React.useEffect(() => {\n        const listener = msg => {\t   \n            logContainer.current += \"\\n\" + msg ;\n            setLogMsg(msg);\n\t    if (textarea_ref.current !== null)\n\t\ttextarea_ref.current.scrollTop = textarea_ref.current.scrollHeight;\n        };\n        \n\tsocket.on(\"log\", listener);\n        return () => { // cleanup\n            socket.off(\"log\", listener);\n        };\n    }, [socket]);\n\n    return (\n          <textarea value={logContainer.current}\n                    readOnly\n                    className=\"log_view pane-content\"\n\t\t    ref={textarea_ref}/>\n    );\n};\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":126,"column":8,"nodeType":"69","endLine":126,"endColumn":10,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":7,"column":12,"nodeType":"65","messageId":"66","endLine":7,"endColumn":18},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'exp_url', 'experimentParams', and 'update_params'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'logMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [exp_url, experimentParams, update_params]",{"range":"77","text":"78"},[4079,4081],"[exp_url, experimentParams, update_params]"]