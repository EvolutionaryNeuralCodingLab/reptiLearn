[{"/home/tal/dev/reptilearn/ui/src/index.js":"1","/home/tal/dev/reptilearn/ui/src/App.js":"2","/home/tal/dev/reptilearn/ui/src/reportWebVitals.js":"3","/home/tal/dev/reptilearn/ui/src/components.js":"4","/home/tal/dev/reptilearn/ui/src/experiment_view.js":"5","/home/tal/dev/reptilearn/ui/src/socket.js":"6","/home/tal/dev/reptilearn/ui/src/config.js":"7","/home/tal/dev/reptilearn/ui/src/stream_view.js":"8","/home/tal/dev/reptilearn/ui/src/video_record_view.js":"9","/home/tal/dev/reptilearn/ui/src/log_view.js":"10","/home/tal/dev/reptilearn/ui/src/main_panel_view.js":"11","/home/tal/dev/reptilearn/ui/src/arena_control_view.js":"12","/home/tal/dev/reptilearn/ui/src/blocks_view.js":"13"},{"size":637,"mtime":1616512606533,"results":"14","hashOfConfig":"15"},{"size":1398,"mtime":1616607897948,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611845073939,"results":"17","hashOfConfig":"18"},{"size":714,"mtime":1616152196206,"results":"19","hashOfConfig":"15"},{"size":9384,"mtime":1616609671199,"results":"20","hashOfConfig":"15"},{"size":296,"mtime":1615550870330,"results":"21","hashOfConfig":"15"},{"size":92,"mtime":1615550971815,"results":"22","hashOfConfig":"15"},{"size":7324,"mtime":1616614211280,"results":"23","hashOfConfig":"15"},{"size":2832,"mtime":1616604217049,"results":"24","hashOfConfig":"15"},{"size":1274,"mtime":1616345305770,"results":"25","hashOfConfig":"15"},{"size":2033,"mtime":1616609304658,"results":"26","hashOfConfig":"15"},{"size":2784,"mtime":1616604351683,"results":"27","hashOfConfig":"15"},{"size":4620,"mtime":1616522560118,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mgtd88",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"15r9jqw",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tal/dev/reptilearn/ui/src/index.js",[],"/home/tal/dev/reptilearn/ui/src/App.js",[],"/home/tal/dev/reptilearn/ui/src/reportWebVitals.js",[],["58","59"],"/home/tal/dev/reptilearn/ui/src/components.js",[],["60","61"],"/home/tal/dev/reptilearn/ui/src/experiment_view.js",["62"],"/home/tal/dev/reptilearn/ui/src/socket.js",[],"/home/tal/dev/reptilearn/ui/src/config.js",[],"/home/tal/dev/reptilearn/ui/src/stream_view.js",[],"/home/tal/dev/reptilearn/ui/src/video_record_view.js",[],"/home/tal/dev/reptilearn/ui/src/log_view.js",["63"],"import React from 'react';\nimport {SocketContext} from './socket.js';\n\nexport const LogView = () => {\n    const logContainer = React.useRef(\"\");\n    const textarea_ref = React.useRef();\n    const [logMsg, setLogMsg] = React.useState(null);\n    \n    const socket = React.useContext(SocketContext);\n\n    React.useEffect(() => {\n        const listener = msg => {\n            if (logContainer.current !== \"\")\n                logContainer.current += \"\\n\";\n            logContainer.current += msg;\n            \n            setLogMsg(msg);\n\t    if (textarea_ref.current !== null)\n\t\ttextarea_ref.current.scrollTop = textarea_ref.current.scrollHeight;\n        };\n        \n\tsocket.on(\"log\", listener);\n        return () => { // cleanup\n            socket.off(\"log\", listener);\n        };\n    }, [socket]);\n\n    const clear_log = () => {\n        logContainer.current = \"\";\n        setLogMsg(null);\n    };\n    \n    return (\n\t<React.Fragment>\n          <div className=\"section_header\">\n            <span className=\"title\">Log</span>\n            <button onClick={clear_log}>Clear</button>\n          </div>\n          <textarea value={logContainer.current}\n                    readOnly\n                    className=\"log_view\"\n\t\t    ref={textarea_ref}/>\n        </React.Fragment>\n    );\n};\n","/home/tal/dev/reptilearn/ui/src/main_panel_view.js",[],"/home/tal/dev/reptilearn/ui/src/arena_control_view.js",[],"/home/tal/dev/reptilearn/ui/src/blocks_view.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":167,"column":8,"nodeType":"73","endLine":167,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":12,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":62,"column":11,"nodeType":"77","messageId":"78","endLine":62,"endColumn":30},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'ctrl_state', 'exp_url', and 'set_experiment'. Either include them or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'logMsg' is assigned a value but never used.","Identifier","unusedVar","'insert_block_before' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [ctrl_state, exp_url, set_experiment]",{"range":"85","text":"86"},[5234,5236],"[ctrl_state, exp_url, set_experiment]"]